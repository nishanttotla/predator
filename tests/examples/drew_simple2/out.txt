/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: initializing code listener [SHA1 4de41360b0e14a2d1b49a6fbe70a4c4ece5f478c]
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: plug-in is compiled against gcc 4.9, built at 20141104, conf: ../src/configure -v --with-pkgversion='Ubuntu 4.9.2-0ubuntu1~12.04' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: now going to be loaded into gcc 4.9, built at 20141104, conf: ../src/configure -v --with-pkgversion='Ubuntu 4.9.2-0ubuntu1~12.04' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'gen_dot.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_typedot.cc:196: debug: ClTypeDotGenerator: created dot file 'type_graph.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:50: debug: ClEasy initialized: "" [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: plug-in successfully initialized
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'simple.c.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'simple.c-main.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:64: debug: building call-graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/callgraph.cc:182: debug: buildCallGraph() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:68: debug: scanning CFG for loop-closing edges... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/loopscan.cc:161: debug: findLoopClosingEdges() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:72: debug: perform points-to analysis... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto_fics.cc:427: debug: PT: ERROR: unhandled instruction type: #2308 = (#2307 * (int)4U) [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:674: debug: pointsToAnalyse() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:76: debug: killing local variables... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/killer.cc:659: debug: killLocalVariables() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:80: debug: ClEasy is calling the analyzer... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/cl_symexec.cc:152: debug: looking for 'main()' at gl scope... [internal location] [-fplugin=libsl.so]
simple.c:4:5: debug: creating fresh initial state for main()... [-fplugin=libsl.so]
simple.c:4:5: debug: SymCallCache is looking for main()... [-fplugin=libsl.so]
simple.c:4:5: debug: >>> entering main() [-fplugin=libsl.so]
simple.c:5:7: debug: ___ entering L1, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:5:7: debug: !!! executing insn #0 ... #2301:length = __VERIFIER_nondet_int () [-fplugin=libsl.so]
simple.c:5:7: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
simple.c:6:6: debug: !!! executing insn #1 ... #1048577 = (#2301:length <= (int)0) [-fplugin=libsl.so]
simple.c:6:6: debug: !!! executing insn #2 ... if (#1048577) goto L2 else L3 [-fplugin=libsl.so]
simple.c:6:6: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
simple.c:6:6: debug: +++ block L2 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
simple.c:6:6: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
simple.c:6:6: debug: +++ block L3 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
simple.c:6:6: debug: ___ completed batch for L1, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:6:18: debug: ___ entering L3, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:6:18: debug: !!! executing insn #0 ... #1048578 = (#2301:length > (int)1000) [-fplugin=libsl.so]
simple.c:6:18: debug: SymExecEngine::pruneOrigin() cleared L3 (initial size of state was 1) [-fplugin=libsl.so]
simple.c:6:18: debug: !!! executing insn #1 ... if (#1048578) goto L2 else L4 [-fplugin=libsl.so]
simple.c:6:18: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
simple.c:6:18: debug: +++ block L2 updated: 2 heaps pending, 2 heaps total [-fplugin=libsl.so]
simple.c:6:18: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
simple.c:6:18: debug: +++ block L4 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
simple.c:6:18: debug: ___ completed batch for L3, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:7:14: debug: ___ entering L4, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:7:14: debug: !!! executing insn #0 ... #2307 = #2301:length [-fplugin=libsl.so]
simple.c:7:14: debug: !!! executing insn #1 ... #2308 = (#2307 * (int)4U) [-fplugin=libsl.so]
simple.c:7:8: debug: !!! executing insn #2 ... #2302:arr = __builtin_alloca (#2308) [-fplugin=libsl.so]
simple.c:7:8: debug: executing __builtin_alloca() [-fplugin=libsl.so]
simple.c:8:6: debug: !!! executing insn #3 ... #1048579 = (#2302:arr == NULL) [-fplugin=libsl.so]
simple.c:8:6: debug: !!! executing insn #4 ... if (#1048579) goto L5 else L6 [-fplugin=libsl.so]
simple.c:8:6: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
simple.c:8:6: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
simple.c:8:6: debug: ___ completed batch for L4, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:9:9: debug: ___ entering L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:9:9: debug: !!! executing insn #0 ... *#2302:arr = (int)0 [-fplugin=libsl.so]
simple.c:10:3: debug: !!! executing insn #1 ... #2311 = (int)0 [-fplugin=libsl.so]
simple.c:10:3: debug: !!! executing insn #2 ... goto L7 [-fplugin=libsl.so]
simple.c:10:3: debug: +++ block L7 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
simple.c:10:3: debug: ___ completed batch for L6, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:11:1: debug: ___ entering L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:11:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
simple.c:11:1: debug: !!! executing insn #1 ... return #2311 [-fplugin=libsl.so]
simple.c:11:1: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:6:43: debug: ___ entering L2, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:6:43: debug: !!! executing insn #0 ... #2301:length = (int)5 [-fplugin=libsl.so]
simple.c:6:43: debug: *** processing block L2, heap #0 (initial size of state was 2) [-fplugin=libsl.so]
simple.c:6:43: debug: *** processing block L2, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
simple.c:6:43: debug: !!! executing insn #1 ... goto L4 [-fplugin=libsl.so]
simple.c:6:43: debug: *** processing block L2, heap #0 (initial size of state was 2) [-fplugin=libsl.so]
simple.c:6:43: debug: +++ block L4 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
simple.c:6:43: debug: *** processing block L2, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
simple.c:6:43: debug: --- block L4 left intact [-fplugin=libsl.so]
simple.c:6:43: debug: ___ completed batch for L2, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:7:14: debug: ___ entering L4, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:7:14: debug: !!! executing insn #0 ... #2307 = #2301:length [-fplugin=libsl.so]
simple.c:7:14: debug: *** processing block L4, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
simple.c:7:14: debug: !!! executing insn #1 ... #2308 = (#2307 * (int)4U) [-fplugin=libsl.so]
simple.c:7:8: debug: !!! executing insn #2 ... #2302:arr = __builtin_alloca (#2308) [-fplugin=libsl.so]
simple.c:7:8: debug: executing __builtin_alloca() [-fplugin=libsl.so]
simple.c:8:6: debug: !!! executing insn #3 ... #1048579 = (#2302:arr == NULL) [-fplugin=libsl.so]
simple.c:8:6: debug: !!! executing insn #4 ... if (#1048579) goto L5 else L6 [-fplugin=libsl.so]
simple.c:8:6: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
simple.c:8:6: debug: +++ block L6 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
simple.c:8:6: debug: ___ completed batch for L4, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:9:9: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:9:9: debug: !!! executing insn #0 ... *#2302:arr = (int)0 [-fplugin=libsl.so]
simple.c:9:9: debug: *** processing block L6, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
simple.c:10:3: debug: !!! executing insn #1 ... #2311 = (int)0 [-fplugin=libsl.so]
simple.c:10:3: debug: !!! executing insn #2 ... goto L7 [-fplugin=libsl.so]
simple.c:10:3: debug: +++ block L7 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
simple.c:10:3: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:11:1: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:11:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
simple.c:11:1: debug: *** processing block L7, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
simple.c:11:1: debug: !!! executing insn #1 ... return #2311 [-fplugin=libsl.so]
simple.c:11:1: debug: ___ completed batch for L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
simple.c:4:5: debug: <<< leaving main() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symcall.cc:425: debug: *** SymCallCtx::flushCallResults() is processing heap #0 of 2 heaps total [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symcall.cc:425: debug: *** SymCallCtx::flushCallResults() is processing heap #1 of 2 heaps total [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:321: debug: <I> sh #0 is equal to the given one, 1 heaps in total [internal location] [-fplugin=libsl.so]
simple.c:4:5: debug: (g) looking for gl junk... [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:83: note: clEasyRun() took 0.000 s [internal location] [-fplugin=libsl.so]
