/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: initializing code listener [SHA1 4de41360b0e14a2d1b49a6fbe70a4c4ece5f478c]
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: plug-in is compiled against gcc 4.9, built at 20141104, conf: ../src/configure -v --with-pkgversion='Ubuntu 4.9.2-0ubuntu1~12.04' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: now going to be loaded into gcc 4.9, built at 20141104, conf: ../src/configure -v --with-pkgversion='Ubuntu 4.9.2-0ubuntu1~12.04' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'gen_dot.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_typedot.cc:196: debug: ClTypeDotGenerator: created dot file 'type_graph.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:50: debug: ClEasy initialized: "" [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: plug-in successfully initialized
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'alternating_list_true-unreach-call.c.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file '-usr-include-stdlib.h-exit.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'alternating_list_true-unreach-call.c-main.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:64: debug: building call-graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/callgraph.cc:182: debug: buildCallGraph() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:68: debug: scanning CFG for loop-closing edges... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/loopscan.cc:161: debug: findLoopClosingEdges() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:72: debug: perform points-to analysis... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:85: debug: PT: may this even happen? [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:674: debug: pointsToAnalyse() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:76: debug: killing local variables... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/killer.cc:659: debug: killLocalVariables() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:80: debug: ClEasy is calling the analyzer... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/cl_symexec.cc:152: debug: looking for 'main()' at gl scope... [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:20:5: debug: creating fresh initial state for main()... [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:20:5: debug: SymCallCache is looking for main()... [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:20:5: debug: >>> entering main() [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:21:7: debug: ___ entering L2, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:21:7: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:24:8: debug: !!! executing insn #1 ... #2310:a = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:24:8: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:25:6: debug: !!! executing insn #2 ... #1048577 = (#2310:a == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:25:6: debug: !!! executing insn #3 ... if (#1048577) goto L3 else L4 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:25:6: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:25:6: debug: +++ block L4 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:25:6: debug: ___ completed batch for L2, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:27:8: debug: ___ entering L4, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:27:8: debug: !!! executing insn #0 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:27:8: debug: !!! executing insn #1 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:27:8: debug: +++ block L5 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:27:8: debug: ___ completed batch for L4, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 1 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 1 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 2 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 2 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 2 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 3 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 3 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 3 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 9 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #8 (initial size of state was 9) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 3 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 10 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #9 (initial size of state was 10) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 4 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 11 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #10 (initial size of state was 11) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 4 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 12 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #11 (initial size of state was 12) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 4 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 13 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #12 (initial size of state was 13) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 4 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 14 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #13 (initial size of state was 14) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 4 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 15 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #14 (initial size of state was 15) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 5 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 16 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #15 (initial size of state was 16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 5 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 17 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #16 (initial size of state was 17) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 5 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 18 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #17 (initial size of state was 18) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 5 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 19 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #18 (initial size of state was 19) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 5 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 20 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #19 (initial size of state was 20) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 5 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 21 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #20 (initial size of state was 21) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 22 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #21 (initial size of state was 22) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 23 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #22 (initial size of state was 23) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 24 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #23 (initial size of state was 24) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 25 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #24 (initial size of state was 25) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 26 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #25 (initial size of state was 26) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 27 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #26 (initial size of state was 27) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 6 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 28 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #27 (initial size of state was 28) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: SymExecEngine::pruneOrigin() cleared L12 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 29 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #28 (initial size of state was 29) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 30 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #29 (initial size of state was 30) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 31 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #30 (initial size of state was 31) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 32 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #31 (initial size of state was 32) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 33 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #32 (initial size of state was 33) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 34 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #33 (initial size of state was 34) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 35 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #34 (initial size of state was 35) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 7 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 36 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #35 (initial size of state was 36) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: SymExecEngine::pruneOrigin() cleared L21 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: SymExecEngine::pruneOrigin() cleared L22 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: SymExecEngine::pruneOrigin() cleared L9 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: SymExecEngine::pruneOrigin() cleared L11 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 9 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #8 (initial size of state was 9) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 37 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #36 (initial size of state was 37) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 38 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #37 (initial size of state was 38) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 39 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #38 (initial size of state was 39) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 40 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #39 (initial size of state was 40) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 41 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #40 (initial size of state was 41) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 42 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #41 (initial size of state was 42) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 43 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #42 (initial size of state was 43) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 44 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #43 (initial size of state was 44) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 8 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 45 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #44 (initial size of state was 45) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 10 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #9 (initial size of state was 10) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 46 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #45 (initial size of state was 46) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 47 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #46 (initial size of state was 47) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 48 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #47 (initial size of state was 48) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 49 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #48 (initial size of state was 49) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 50 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #49 (initial size of state was 50) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 51 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #50 (initial size of state was 51) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 52 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #51 (initial size of state was 52) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 53 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #52 (initial size of state was 53) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 54 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #53 (initial size of state was 54) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 9 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 55 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #54 (initial size of state was 55) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 11 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #10 (initial size of state was 11) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 56 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #55 (initial size of state was 56) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 57 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #56 (initial size of state was 57) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 58 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #57 (initial size of state was 58) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 59 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #58 (initial size of state was 59) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 60 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #59 (initial size of state was 60) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 61 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #60 (initial size of state was 61) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 62 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #61 (initial size of state was 62) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 63 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #62 (initial size of state was 63) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 64 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #63 (initial size of state was 64) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 65 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #64 (initial size of state was 65) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 10 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 66 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #65 (initial size of state was 66) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 12 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #11 (initial size of state was 12) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 67 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #66 (initial size of state was 67) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 68 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #67 (initial size of state was 68) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 69 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #68 (initial size of state was 69) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 70 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #69 (initial size of state was 70) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 71 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #70 (initial size of state was 71) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 72 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #71 (initial size of state was 72) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 73 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #72 (initial size of state was 73) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 74 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #73 (initial size of state was 74) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 75 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #74 (initial size of state was 75) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 76 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #75 (initial size of state was 76) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 77 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #76 (initial size of state was 77) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 11 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 78 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #77 (initial size of state was 78) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 13 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #12 (initial size of state was 13) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 79 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #78 (initial size of state was 79) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 80 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #79 (initial size of state was 80) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 81 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #80 (initial size of state was 81) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 82 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #81 (initial size of state was 82) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 83 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #82 (initial size of state was 83) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 84 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #83 (initial size of state was 84) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 85 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #84 (initial size of state was 85) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 86 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #85 (initial size of state was 86) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 87 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #86 (initial size of state was 87) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 88 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #87 (initial size of state was 88) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 89 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #88 (initial size of state was 89) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 90 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #89 (initial size of state was 90) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 12 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 91 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #90 (initial size of state was 91) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 14 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #13 (initial size of state was 14) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 92 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #91 (initial size of state was 92) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 93 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #92 (initial size of state was 93) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 94 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #93 (initial size of state was 94) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 95 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #94 (initial size of state was 95) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 96 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #95 (initial size of state was 96) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 97 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #96 (initial size of state was 97) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 98 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #97 (initial size of state was 98) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 99 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #98 (initial size of state was 99) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 100 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #99 (initial size of state was 100) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 101 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #100 (initial size of state was 101) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 102 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #101 (initial size of state was 102) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 103 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #102 (initial size of state was 103) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 104 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #103 (initial size of state was 104) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 13 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 105 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #104 (initial size of state was 105) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 15 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #14 (initial size of state was 15) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 106 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #105 (initial size of state was 106) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 107 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #106 (initial size of state was 107) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 108 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #107 (initial size of state was 108) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 109 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #108 (initial size of state was 109) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 110 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #109 (initial size of state was 110) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 111 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #110 (initial size of state was 111) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 112 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #111 (initial size of state was 112) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 113 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #112 (initial size of state was 113) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 114 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #113 (initial size of state was 114) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 115 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #114 (initial size of state was 115) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 116 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #115 (initial size of state was 116) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 117 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #116 (initial size of state was 117) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 118 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #117 (initial size of state was 118) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 119 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #118 (initial size of state was 119) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 14 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 120 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #119 (initial size of state was 120) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: SymExecEngine::pruneOrigin() cleared L7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 16 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #15 (initial size of state was 16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: SymExecEngine::pruneOrigin() cleared L12 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 121 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #120 (initial size of state was 121) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 122 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #121 (initial size of state was 122) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 123 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #122 (initial size of state was 123) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 124 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #123 (initial size of state was 124) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 125 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #124 (initial size of state was 125) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 126 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #125 (initial size of state was 126) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 127 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #126 (initial size of state was 127) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 128 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #127 (initial size of state was 128) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 129 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #128 (initial size of state was 129) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 130 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #129 (initial size of state was 130) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 131 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #130 (initial size of state was 131) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 132 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #131 (initial size of state was 132) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 133 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #132 (initial size of state was 133) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 134 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #133 (initial size of state was 134) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 135 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #134 (initial size of state was 135) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 15 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 136 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #135 (initial size of state was 136) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: SymExecEngine::pruneOrigin() cleared L21 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: SymExecEngine::pruneOrigin() cleared L22 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: SymExecEngine::pruneOrigin() cleared L8 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: SymExecEngine::pruneOrigin() cleared L9 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: SymExecEngine::pruneOrigin() cleared L11 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 17 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #16 (initial size of state was 17) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 137 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #136 (initial size of state was 137) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 138 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #137 (initial size of state was 138) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 139 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #138 (initial size of state was 139) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 140 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #139 (initial size of state was 140) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 141 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #140 (initial size of state was 141) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 142 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #141 (initial size of state was 142) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 143 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #142 (initial size of state was 143) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 144 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #143 (initial size of state was 144) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 145 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #144 (initial size of state was 145) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 146 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #145 (initial size of state was 146) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 147 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #146 (initial size of state was 147) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 148 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #147 (initial size of state was 148) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 149 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #148 (initial size of state was 149) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 150 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #149 (initial size of state was 150) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 151 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #150 (initial size of state was 151) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 152 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #151 (initial size of state was 152) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 16 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 153 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #152 (initial size of state was 153) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 18 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #17 (initial size of state was 18) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 154 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #153 (initial size of state was 154) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 155 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #154 (initial size of state was 155) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 156 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #155 (initial size of state was 156) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 157 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #156 (initial size of state was 157) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 158 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #157 (initial size of state was 158) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 159 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #158 (initial size of state was 159) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 160 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #159 (initial size of state was 160) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 161 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #160 (initial size of state was 161) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 162 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #161 (initial size of state was 162) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 163 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #162 (initial size of state was 163) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 164 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #163 (initial size of state was 164) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 165 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #164 (initial size of state was 165) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 166 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #165 (initial size of state was 166) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 167 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #166 (initial size of state was 167) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 168 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #167 (initial size of state was 168) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 169 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #168 (initial size of state was 169) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 170 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #169 (initial size of state was 170) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 17 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 171 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #170 (initial size of state was 171) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 19 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #18 (initial size of state was 19) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 172 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #171 (initial size of state was 172) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 173 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #172 (initial size of state was 173) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 174 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #173 (initial size of state was 174) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 175 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #174 (initial size of state was 175) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 176 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #175 (initial size of state was 176) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 177 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #176 (initial size of state was 177) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 178 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #177 (initial size of state was 178) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 179 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #178 (initial size of state was 179) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 180 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #179 (initial size of state was 180) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 181 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #180 (initial size of state was 181) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 182 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #181 (initial size of state was 182) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 183 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #182 (initial size of state was 183) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 184 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #183 (initial size of state was 184) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 185 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #184 (initial size of state was 185) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 186 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #185 (initial size of state was 186) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 187 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #186 (initial size of state was 187) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 188 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #187 (initial size of state was 188) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 189 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #188 (initial size of state was 189) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 18 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 190 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #189 (initial size of state was 190) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 20 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #19 (initial size of state was 20) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 191 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #190 (initial size of state was 191) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 192 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #191 (initial size of state was 192) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 193 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #192 (initial size of state was 193) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 194 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #193 (initial size of state was 194) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 195 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #194 (initial size of state was 195) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 196 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #195 (initial size of state was 196) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 197 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #196 (initial size of state was 197) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 198 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #197 (initial size of state was 198) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 199 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #198 (initial size of state was 199) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 200 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #199 (initial size of state was 200) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 201 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #200 (initial size of state was 201) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 202 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #201 (initial size of state was 202) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 203 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #202 (initial size of state was 203) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 204 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #203 (initial size of state was 204) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 205 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #204 (initial size of state was 205) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 206 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #205 (initial size of state was 206) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 207 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #206 (initial size of state was 207) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 208 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #207 (initial size of state was 208) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 209 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #208 (initial size of state was 209) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 19 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 210 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #209 (initial size of state was 210) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 21 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #20 (initial size of state was 21) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 211 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #210 (initial size of state was 211) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 212 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #211 (initial size of state was 212) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 213 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #212 (initial size of state was 213) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 214 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #213 (initial size of state was 214) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 215 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #214 (initial size of state was 215) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 216 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #215 (initial size of state was 216) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 217 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #216 (initial size of state was 217) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 218 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #217 (initial size of state was 218) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 219 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #218 (initial size of state was 219) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 220 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #219 (initial size of state was 220) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 221 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #220 (initial size of state was 221) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 222 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #221 (initial size of state was 222) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 223 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #222 (initial size of state was 223) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 224 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #223 (initial size of state was 224) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 225 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #224 (initial size of state was 225) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 226 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #225 (initial size of state was 226) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 227 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #226 (initial size of state was 227) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 228 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #227 (initial size of state was 228) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 229 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #228 (initial size of state was 229) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 230 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #229 (initial size of state was 230) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 20 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 231 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #230 (initial size of state was 231) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 22 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #21 (initial size of state was 22) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 232 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #231 (initial size of state was 232) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 233 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #232 (initial size of state was 233) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 234 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #233 (initial size of state was 234) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 235 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #234 (initial size of state was 235) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 236 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #235 (initial size of state was 236) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 237 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #236 (initial size of state was 237) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 238 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #237 (initial size of state was 238) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 239 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #238 (initial size of state was 239) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 240 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #239 (initial size of state was 240) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 241 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #240 (initial size of state was 241) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 242 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #241 (initial size of state was 242) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 243 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #242 (initial size of state was 243) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 244 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #243 (initial size of state was 244) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 245 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #244 (initial size of state was 245) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 246 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #245 (initial size of state was 246) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 247 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #246 (initial size of state was 247) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 248 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #247 (initial size of state was 248) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 249 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #248 (initial size of state was 249) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 250 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #249 (initial size of state was 250) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 251 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #250 (initial size of state was 251) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 252 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #251 (initial size of state was 252) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 21 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 253 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #252 (initial size of state was 253) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 23 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #22 (initial size of state was 23) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 254 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #253 (initial size of state was 254) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 255 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #254 (initial size of state was 255) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 256 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #255 (initial size of state was 256) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 257 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #256 (initial size of state was 257) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 258 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #257 (initial size of state was 258) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 259 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #258 (initial size of state was 259) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 260 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #259 (initial size of state was 260) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 261 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #260 (initial size of state was 261) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 262 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #261 (initial size of state was 262) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 263 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #262 (initial size of state was 263) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 264 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #263 (initial size of state was 264) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 265 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #264 (initial size of state was 265) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 266 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #265 (initial size of state was 266) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 267 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #266 (initial size of state was 267) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 268 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #267 (initial size of state was 268) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 269 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #268 (initial size of state was 269) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 270 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #269 (initial size of state was 270) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 271 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #270 (initial size of state was 271) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 272 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #271 (initial size of state was 272) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 273 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #272 (initial size of state was 273) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 274 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #273 (initial size of state was 274) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 275 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #274 (initial size of state was 275) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 22 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 276 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #275 (initial size of state was 276) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 24 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #23 (initial size of state was 24) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: SymExecEngine::pruneOrigin() cleared L12 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 277 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #276 (initial size of state was 277) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 278 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #277 (initial size of state was 278) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 279 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #278 (initial size of state was 279) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 280 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #279 (initial size of state was 280) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 281 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #280 (initial size of state was 281) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 282 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #281 (initial size of state was 282) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 283 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #282 (initial size of state was 283) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 284 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #283 (initial size of state was 284) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 285 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #284 (initial size of state was 285) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 286 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #285 (initial size of state was 286) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 287 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #286 (initial size of state was 287) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 288 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #287 (initial size of state was 288) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 289 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #288 (initial size of state was 289) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 290 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #289 (initial size of state was 290) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 291 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #290 (initial size of state was 291) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 292 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #291 (initial size of state was 292) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 293 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #292 (initial size of state was 293) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 294 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #293 (initial size of state was 294) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 295 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #294 (initial size of state was 295) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 296 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #295 (initial size of state was 296) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 297 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #296 (initial size of state was 297) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 298 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #297 (initial size of state was 298) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 299 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #298 (initial size of state was 299) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 23 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 300 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #299 (initial size of state was 300) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: *** processing block L21, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: SymExecEngine::pruneOrigin() cleared L21 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: *** processing block L22, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: SymExecEngine::pruneOrigin() cleared L22 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L8 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: !!! executing insn #0 ... #2312:p->h = (int)2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:33:12: debug: *** processing block L8, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #1 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: +++ block L9 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:34:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: *** processing block L9, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: SymExecEngine::pruneOrigin() cleared L9 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: *** processing block L11, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: SymExecEngine::pruneOrigin() cleared L11 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 25 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #24 (initial size of state was 25) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 301 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #300 (initial size of state was 301) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 302 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #301 (initial size of state was 302) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 303 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #302 (initial size of state was 303) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 304 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #303 (initial size of state was 304) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 305 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #304 (initial size of state was 305) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 306 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #305 (initial size of state was 306) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 307 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #306 (initial size of state was 307) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 308 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #307 (initial size of state was 308) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 309 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #308 (initial size of state was 309) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 310 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #309 (initial size of state was 310) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 311 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #310 (initial size of state was 311) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 312 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #311 (initial size of state was 312) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 313 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #312 (initial size of state was 313) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 314 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #313 (initial size of state was 314) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 315 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #314 (initial size of state was 315) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 316 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #315 (initial size of state was 316) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 317 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #316 (initial size of state was 317) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 318 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #317 (initial size of state was 318) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 319 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #318 (initial size of state was 319) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 320 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #319 (initial size of state was 320) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 321 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #320 (initial size of state was 321) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 322 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #321 (initial size of state was 322) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 323 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #322 (initial size of state was 323) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 324 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #323 (initial size of state was 324) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: SymExecEngine::pruneOrigin() cleared L16 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 24 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 325 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #324 (initial size of state was 325) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L21 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ entering L21, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #0 ... #2339 = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: !!! executing insn #1 ... goto L22 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: +++ block L22 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:59:3: debug: ___ completed batch for L21, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ entering L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #0 ... <anon_label>: [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: !!! executing insn #1 ... return #2339 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: debug: ___ completed batch for L22, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #0 ... #1048578 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: SymExecEngine::pruneOrigin() cleared L6 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: !!! executing insn #1 ... if (#1048578) goto L7 else L8 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: +++ block L7 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: !!! executing insn #0 ... #2312:p->h = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:30:12: debug: *** processing block L7, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #1 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: !!! executing insn #2 ... goto L9 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: +++ block L9 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:31:12: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: !!! executing insn #0 ... #2311:t = malloc ((int)16U) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:36:7: debug: executing malloc(16) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #1 ... #1048579 = (#2311:t == NULL) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: !!! executing insn #2 ... if (#1048579) goto L10 else L11 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: +++ block L11 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:37:8: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:38:10: debug: !!! executing insn #0 ... #2312:p->n = #2311:t [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #1 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: !!! executing insn #2 ... goto L5 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: +++ block L5 updated: 1 heaps pending, 26 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:39:7: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: ___ entering L5, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: !!! executing insn #0 ... #2328 = __VERIFIER_nondet_int () [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: *** processing block L5, heap #25 (initial size of state was 26) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:10: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:753: debug: releaseValueOf() kills an orphan Neq predicate [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #1 ... #1048580 = (#2328 != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: !!! executing insn #2 ... if (#1048580) goto L6 else L12 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: +++ block L12 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:28:9: debug: ___ completed batch for L5, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: ___ entering L12, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: !!! executing insn #0 ... #2312:p->h = (int)3 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:41:8: debug: *** processing block L12, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:44:5: debug: !!! executing insn #1 ... #2312:p = #2310:a [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #2 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: !!! executing insn #3 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: +++ block L13 updated: 1 heaps pending, 326 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:45:8: debug: ___ completed batch for L12, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #325 (initial size of state was 326) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 327 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #326 (initial size of state was 327) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 328 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #327 (initial size of state was 328) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 329 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #328 (initial size of state was 329) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 330 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #329 (initial size of state was 330) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 331 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #330 (initial size of state was 331) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 332 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #331 (initial size of state was 332) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: SymExecEngine::pruneOrigin() cleared L15 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 333 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #332 (initial size of state was 333) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 334 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #333 (initial size of state was 334) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 335 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #334 (initial size of state was 335) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 336 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #335 (initial size of state was 336) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L15 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: ___ entering L15, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: !!! executing insn #0 ... #2309:flag = (int)0 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:48:12: debug: *** processing block L15, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:12: debug: !!! executing insn #1 ... #2331 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #2 ... #1048582 = (#2331 != (int)1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: !!! executing insn #3 ... if (#1048582) goto L17 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: +++ block L18 updated: 1 heaps pending, 7 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:49:10: debug: ___ completed batch for L15, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #6 (initial size of state was 7) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 337 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #336 (initial size of state was 337) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #1 ... #1048584 = (#2338 != (int)3) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: !!! executing insn #2 ... if (#1048584) goto L14 else L21 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: +++ block L14 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:9: debug: ___ completed batch for L13, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ entering L14, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #0 ... #1048581 = (#2309:flag != (int)0) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: SymExecEngine::pruneOrigin() cleared L14 (initial size of state was 1) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: !!! executing insn #1 ... if (#1048581) goto L15 else L16 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: +++ block L16 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:47:8: debug: ___ completed batch for L14, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: ___ entering L16, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: !!! executing insn #0 ... #2309:flag = (int)1 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:52:12: debug: *** processing block L16, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:12: debug: !!! executing insn #1 ... #2335 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #2 ... #1048583 = (#2335 != (int)2) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: !!! executing insn #3 ... if (#1048583) goto L20 else L18 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: +++ block L18 updated: 1 heaps pending, 8 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:53:10: debug: ___ completed batch for L16, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ entering L18, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #0 ... #2312:p = #2312:p->n [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: *** processing block L18, heap #7 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: SymExecEngine::pruneOrigin() cleared L18 (initial size of state was 8) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: !!! executing insn #1 ... goto L13 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:617: debug: --> initiating segment discovery, 25 entry candidate(s) given [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:330: debug:     joinData() refuses to create a segment! [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symdiscover.cc:667: debug: <-- no new segment found [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: +++ block L13 updated: 1 heaps pending, 338 heaps total [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:56:7: debug: ___ completed batch for L18, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: ___ entering L13, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: !!! executing insn #0 ... #2338 = #2312:p->h [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: debug: *** processing block L13, heap #337 (initial size of state was 338) [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: warning: caught signal 2 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: note: ... while executing main(), 25 result(s) already computed, 1 basic block(s) in the queue, 338 src heap(s), 0 dst heap(s), insn #0, heap #337 [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:46:11: note: ___ block L13 in progress, 338 heap(s) total, 0 heap(s) pending [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:29:8: note: ___ block L6 scheduled, 1 heap(s) total, 1 heap(s) pending [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:20:5: warning: symbolic execution terminates prematurely [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:20:5: note: signalled to die [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/cl_symexec.cc:189: debug: clEasyRun() caught a run-time exception: signalled to die [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:83: note: clEasyRun() took 16.250 s [internal location] [-fplugin=libsl.so]
alternating_list_true-unreach-call.c:63:1: warning: /home/davidson/crowdsrc/predatorGit/sl_build/libsl.so has reported some warnings
 }
 ^
