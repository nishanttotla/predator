/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: initializing code listener [SHA1 4de41360b0e14a2d1b49a6fbe70a4c4ece5f478c]
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: plug-in is compiled against gcc 4.9, built at 20141104, conf: ../src/configure -v --with-pkgversion='Ubuntu 4.9.2-0ubuntu1~12.04' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: now going to be loaded into gcc 4.9, built at 20141104, conf: ../src/configure -v --with-pkgversion='Ubuntu 4.9.2-0ubuntu1~12.04' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'gen_dot.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_typedot.cc:196: debug: ClTypeDotGenerator: created dot file 'type_graph.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:50: debug: ClEasy initialized: "" [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl_build/libsl.so: debug: plug-in successfully initialized
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'reverse_array_alloca_unsafe_false-valid-deref.c.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_dotgen.cc:226: debug: ClDotGenerator: created dot file 'reverse_array_alloca_unsafe_false-valid-deref.c-main.dot' [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:64: debug: building call-graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/callgraph.cc:182: debug: buildCallGraph() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:68: debug: scanning CFG for loop-closing edges... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/loopscan.cc:161: debug: findLoopClosingEdges() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:72: debug: perform points-to analysis... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto_fics.cc:427: debug: PT: ERROR: unhandled instruction type: #2319 = (#2318:length.0 & (int)1U) [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/pointsto.cc:674: debug: pointsToAnalyse() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:76: debug: killing local variables... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/killer.cc:659: debug: killLocalVariables() took 0.000 s [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:80: debug: ClEasy is calling the analyzer... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/cl_symexec.cc:152: debug: looking for 'main()' at gl scope... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:4:5: debug: creating fresh initial state for main()... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:4:5: debug: SymCallCache is looking for main()... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:4:5: debug: >>> entering main() [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:6:7: debug: ___ entering L1, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:6:7: debug: !!! executing insn #0 ... #2304:length = __VERIFIER_nondet_int () [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:6:7: debug: executing __VERIFIER_nondet_int() [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: !!! executing insn #1 ... #1048577 = (#2304:length <= (int)0) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: !!! executing insn #2 ... if (#1048577) goto L2 else L3 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: +++ block L2 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:619: debug: SymStateMap::insert() bypasses even the isomorphism check [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: +++ block L3 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:6: debug: ___ completed batch for L1, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: ___ entering L3, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: !!! executing insn #0 ... #1048578 = (#2304:length > (int)1000) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: SymExecEngine::pruneOrigin() cleared L3 (initial size of state was 1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: !!! executing insn #1 ... if (#1048578) goto L2 else L4 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: +++ block L2 updated: 2 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: +++ block L4 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:18: debug: ___ completed batch for L3, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: ___ entering L4, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: !!! executing insn #0 ... #2318:length.0 = #2304:length [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: !!! executing insn #1 ... #2319 = (#2318:length.0 & (int)1U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: !!! executing insn #2 ... #1048579 = (#2319 == (int)0U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: !!! executing insn #3 ... if (#1048579) goto L5 else L6 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: +++ block L6 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: ___ completed batch for L4, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: ___ entering L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: !!! executing insn #0 ... #2322 = #2304:length [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: !!! executing insn #1 ... #2323 = (#2322 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:8: debug: !!! executing insn #2 ... #2305:arr = __builtin_alloca (#2323) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:8: debug: executing __builtin_alloca() [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: !!! executing insn #3 ... #2301:i = (int)0 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: !!! executing insn #4 ... goto L7 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: +++ block L7 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: ___ completed batch for L6, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ entering L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #0 ... #1048581 = (#2301:i < #2304:length) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #1 ... if (#1048581) goto L8 else L11 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L8 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ completed batch for L7, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: ___ entering L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #0 ... #2324 = #2301:i [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #1 ... #2325 = (#2324 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #2 ... #2326 = (#2305:arr (ptr +) #2325) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #3 ... #2327 = *#2326 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: !!! executing insn #4 ... #1048580 = (#2327 == (int)0) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: !!! executing insn #5 ... if (#1048580) goto L9 else L10 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: +++ block L9 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: +++ block L10 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: ___ completed batch for L8, main(), 3 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ entering L10, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #0 ... #2301:i = (#2301:i + (int)1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #1 ... goto L7 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: +++ block L7 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ completed batch for L10, main(), 3 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ entering L7, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #0 ... #1048581 = (#2301:i < #2304:length) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #1 ... if (#1048581) goto L8 else L11 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #0 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 1 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L8 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L11 updated: 1 heaps pending, 1 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ completed batch for L7, main(), 4 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: ___ entering L11, main(), 3 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: !!! executing insn #0 ... #2335 = (#2304:length / (int)2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #1 ... #2336 = #2335 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #2 ... #2337 = (#2336 + (int)1U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #3 ... #2338 = (#2337 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #4 ... #2339 = (#2305:arr (ptr +) #2338) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: !!! executing insn #5 ... *#2339 = (int)0 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: error: dereferencing object of size 4B out of bounds [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: the pointer being dereferenced points 0B beyond a variable on stack of size 4B [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:516: debug: plotTraceCore() is traversing a trace graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:580: note: trace graph dumped to 'symtrace-0000.dot' [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'trace-state-0000.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'error-state-0000.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: ___ completed batch for L11, main(), 3 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: ___ entering L8, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #0 ... #2324 = #2301:i [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: *** processing block L8, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #1 ... #2325 = (#2324 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #2 ... #2326 = (#2305:arr (ptr +) #2325) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #3 ... #2327 = *#2326 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: error: dereferencing object of size 4B out of bounds [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: note: the pointer being dereferenced points 0B beyond a variable on stack of size 4B [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:516: debug: plotTraceCore() is traversing a trace graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:580: note: trace graph dumped to 'symtrace-0001.dot' [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: note: writing heap graph to 'trace-state-0001.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: note: writing heap graph to 'error-state-0001.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: ___ completed batch for L8, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: ___ entering L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #0 ... #2330 = #2301:i [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #1 ... #2331 = (#2330 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #2 ... #2332 = (#2305:arr (ptr +) #2331) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #3 ... #2333 = *#2332 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: !!! executing insn #4 ... #2334 = (#2333 + (int)1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: !!! executing insn #5 ... *#2332 = #2334 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: !!! executing insn #6 ... goto L10 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: +++ block L10 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: ___ completed batch for L9, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ entering L10, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #0 ... #2301:i = (#2301:i + (int)1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: *** processing block L10, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #1 ... goto L7 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: +++ block L7 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ completed batch for L10, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ entering L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #0 ... #1048581 = (#2301:i < #2304:length) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #1 ... if (#1048581) goto L8 else L11 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #0 (initial size of state was 3) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #1 (initial size of state was 3) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 1 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L8 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L11 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ completed batch for L7, main(), 3 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: ___ entering L11, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: !!! executing insn #0 ... #2335 = (#2304:length / (int)2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: *** processing block L11, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #1 ... #2336 = #2335 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #2 ... #2337 = (#2336 + (int)1U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #3 ... #2338 = (#2337 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #4 ... #2339 = (#2305:arr (ptr +) #2338) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: !!! executing insn #5 ... *#2339 = (int)0 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: error: dereferencing object of size 4B out of bounds [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: the pointer being dereferenced points 0B beyond a variable on stack of size 4B [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:516: debug: plotTraceCore() is traversing a trace graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:580: note: trace graph dumped to 'symtrace-0002.dot' [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'trace-state-0002.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'error-state-0002.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: ___ completed batch for L11, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: ___ entering L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #0 ... #2324 = #2301:i [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: *** processing block L8, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #1 ... #2325 = (#2324 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #2 ... #2326 = (#2305:arr (ptr +) #2325) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #3 ... #2327 = *#2326 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: error: dereferencing object of size 4B out of bounds [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: note: the pointer being dereferenced points 0B beyond a variable on stack of size 4B [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:516: debug: plotTraceCore() is traversing a trace graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:580: note: trace graph dumped to 'symtrace-0003.dot' [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: note: writing heap graph to 'trace-state-0003.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: note: writing heap graph to 'error-state-0003.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: ___ completed batch for L8, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: ___ entering L2, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: !!! executing insn #0 ... #2304:length = (int)1 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: *** processing block L2, heap #0 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: *** processing block L2, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: !!! executing insn #1 ... goto L4 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: *** processing block L2, heap #0 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: +++ block L4 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: *** processing block L2, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: --- block L4 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:7:43: debug: ___ completed batch for L2, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: ___ entering L4, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: !!! executing insn #0 ... #2318:length.0 = #2304:length [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: *** processing block L4, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:18: debug: !!! executing insn #1 ... #2319 = (#2318:length.0 & (int)1U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: !!! executing insn #2 ... #1048579 = (#2319 == (int)0U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: !!! executing insn #3 ... if (#1048579) goto L5 else L6 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: +++ block L6 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:9:6: debug: ___ completed batch for L4, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: ___ entering L6, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: !!! executing insn #0 ... #2322 = #2304:length [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: *** processing block L6, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:14: debug: !!! executing insn #1 ... #2323 = (#2322 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:8: debug: !!! executing insn #2 ... #2305:arr = __builtin_alloca (#2323) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:10:8: debug: executing __builtin_alloca() [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: !!! executing insn #3 ... #2301:i = (int)0 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: !!! executing insn #4 ... goto L7 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: +++ block L7 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:9: debug: ___ completed batch for L6, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #0 ... #1048581 = (#2301:i < #2304:length) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #1 ... if (#1048581) goto L8 else L11 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #0 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 3 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #1 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 3 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #2 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #2 is equal to the given one, 3 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L8 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: ___ entering L8, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #0 ... #2324 = #2301:i [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: *** processing block L8, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #1 ... #2325 = (#2324 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #2 ... #2326 = (#2305:arr (ptr +) #2325) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:12: debug: !!! executing insn #3 ... #2327 = *#2326 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: !!! executing insn #4 ... #1048580 = (#2327 == (int)0) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: !!! executing insn #5 ... if (#1048580) goto L9 else L10 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: +++ block L9 updated: 1 heaps pending, 2 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: +++ block L10 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:8: debug: ___ completed batch for L8, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ entering L10, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #0 ... #2301:i = (#2301:i + (int)1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: *** processing block L10, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #1 ... goto L7 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: +++ block L7 updated: 1 heaps pending, 5 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ completed batch for L10, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ entering L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #0 ... #1048581 = (#2301:i < #2304:length) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #1 ... if (#1048581) goto L8 else L11 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #0 (initial size of state was 5) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #1 (initial size of state was 5) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #2 (initial size of state was 5) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #2 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 2 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #3 (initial size of state was 5) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #3 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #4 (initial size of state was 5) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L11 updated: 1 heaps pending, 3 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ completed batch for L7, main(), 2 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: ___ entering L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: !!! executing insn #0 ... #2335 = (#2304:length / (int)2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: *** processing block L11, heap #2 (initial size of state was 3) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #1 ... #2336 = #2335 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #2 ... #2337 = (#2336 + (int)1U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #3 ... #2338 = (#2337 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #4 ... #2339 = (#2305:arr (ptr +) #2338) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: !!! executing insn #5 ... *#2339 = (int)0 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: error: dereferencing object of size 4B out of bounds [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: the pointer being dereferenced points 0B beyond a variable on stack of size 4B [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:516: debug: plotTraceCore() is traversing a trace graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:580: note: trace graph dumped to 'symtrace-0004.dot' [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'trace-state-0004.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'error-state-0004.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: ___ completed batch for L11, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: ___ entering L9, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #0 ... #2330 = #2301:i [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: *** processing block L9, heap #1 (initial size of state was 2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #1 ... #2331 = (#2330 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #2 ... #2332 = (#2305:arr (ptr +) #2331) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:28: debug: !!! executing insn #3 ... #2333 = *#2332 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: !!! executing insn #4 ... #2334 = (#2333 + (int)1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: !!! executing insn #5 ... *#2332 = #2334 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: !!! executing insn #6 ... goto L10 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: +++ block L10 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:13:31: debug: ___ completed batch for L9, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ entering L10, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #0 ... #2301:i = (#2301:i + (int)1) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: *** processing block L10, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: !!! executing insn #1 ... goto L7 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: -L- traversing a loop-closing edge [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: +++ block L7 updated: 1 heaps pending, 6 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:24: debug: ___ completed batch for L10, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ entering L7, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #0 ... #1048581 = (#2301:i < #2304:length) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: !!! executing insn #1 ... if (#1048581) goto L8 else L11 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #0 (initial size of state was 6) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #1 (initial size of state was 6) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #0 is equal to the given one, 3 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #2 (initial size of state was 6) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?T? CL_INSN_COND updates TRUE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #2 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ?F? CL_INSN_COND updates FALSE branch [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symproc.cc:1606: debug: trimRangesIfPossible() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symheap.cc:2238: debug: replaceRngByInt() is taking place... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #1 is equal to the given one, 3 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #3 (initial size of state was 6) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .T. CL_INSN_COND got VAL_TRUE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #3 is equal to the given one, 4 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L8 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #4 (initial size of state was 6) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symstate.cc:189: debug: <I> sh #2 is equal to the given one, 3 heaps in total [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: --- block L11 left intact [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: *** processing block L7, heap #5 (initial size of state was 6) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: .F. CL_INSN_COND got VAL_FALSE [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: +++ block L11 updated: 1 heaps pending, 4 heaps total [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:12:3: debug: ___ completed batch for L7, main(), 1 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: ___ entering L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: !!! executing insn #0 ... #2335 = (#2304:length / (int)2) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:14: debug: *** processing block L11, heap #3 (initial size of state was 4) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #1 ... #2336 = #2335 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #2 ... #2337 = (#2336 + (int)1U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #3 ... #2338 = (#2337 * (int)4U) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:6: debug: !!! executing insn #4 ... #2339 = (#2305:arr (ptr +) #2338) [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: !!! executing insn #5 ... *#2339 = (int)0 [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: error: dereferencing object of size 4B out of bounds [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: the pointer being dereferenced points 0B beyond a variable on stack of size 4B [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:516: debug: plotTraceCore() is traversing a trace graph... [internal location] [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/sl/symtrace.cc:580: note: trace graph dumped to 'symtrace-0005.dot' [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'trace-state-0005.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: note: writing heap graph to 'error-state-0005.dot'... [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:16:23: debug: ___ completed batch for L11, main(), 0 basic block(s) in the queue [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:4:5: debug: <<< leaving main() [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:4:5: debug: (g) looking for gl junk... [-fplugin=libsl.so]
/home/davidson/crowdsrc/predatorGit/cl/cl_easy.cc:83: note: clEasyRun() took 0.010 s [internal location] [-fplugin=libsl.so]
reverse_array_alloca_unsafe_false-valid-deref.c:30:1: error: /home/davidson/crowdsrc/predatorGit/sl_build/libsl.so has detected some errors
 }
 ^
